version: '2'
volumes:
  nginx-logs: {}
  nginx-conf-data: {}
  django-static: {}
  db-backups: {}
  django-logs: {}
  django-media-backups: {}
  postgis-data: {}
  django-media: {}
  geoserver-data-dir: {}
  django-reports: {}
services:
  geoserver:
    image: geonode/spcgeonode:geoserver-3.0
    environment:
      GEOSERVER_ADMIN_PASSWORD: admingeoserver
      SITEURL: http:///
      DATABASE_URL: postgres://docker:docker@db:5432/gis
      GEODATABASE_URL: postgis://geonode_data:docker@db:5432/geonode_data
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admingeoserver
      HTTP_HOST: staging.rbis.kartoza.com
      HTTP_PORT: '80'
    volumes:
    - geodatadir:/spcgeonode-geodatadir/
    - sync-data:/sync-data
    links:
    - db:db
    - geonode-db:geonode-db
    - uwsgi:nginx
  cache:
    image: memcached
    stdin_open: true
    entrypoint:
    - memcached
    - -m 64
    tty: true
    labels:
      io.rancher.container.pull_image: always
  runmessaging:
    image: dimasciput/rbis_uwsgi:latest
    environment:
      ADMIN_EMAILS: dimas@kartoza.com
      ALLOWED_HOSTS: '["localhost","127.0.0.1","staging.rbis.kartoza.com"]'
      APPLICATION_NAME: FBIS
      APP_NAME: rbis
      ASYNC_SIGNALS_GEONODE: 'True'
      AUTH_WITH_EMAIL_ONLY: 'True'
      BING_MAP_KEY: AkgNFJR-X5y5PQAuFebJ0Vme7QVH69AR4333gPTjX2tzhXBPGuyEsXDHox8Bazvy
      CONSERVATION_STATUS_FILTER: 'True'
      CONTACT_US_EMAIL: dimas@kartoza.com
      C_FORCE_ROOT: '1'
      DATABASE_HOST: db
      DATABASE_NAME: gis
      DATABASE_PASSWORD: docker
      DATABASE_USERNAME: docker
      DATE_TITLE: TEMPORAL
      DEFAULT_BACKEND_DATASTORE: datastore
      DJANGO_SETTINGS_MODULE: core.settings.prod_docker
      ECOLOGICAL_CONDITION_FILTER: 'True'
      ENABLE_MODULE_FILTER: 'True'
      ENABLE_UPLOAD_DATA: 'False'
      GEOCONTEXT_COLLECTION_KEY: ledet
      GEOCONTEXT_URL: https://geocontext.kartoza.com/
      GEOIP_PATH: /home/web/media/geoip.db
      GEONODE_DATABASE: gis
      GEONODE_DATABASE_PASSWORD: docker
      GEONODE_DATABASE_USER: docker
      GEONODE_GEODATABASE: geonode_data
      GEONODE_GEODATABASE_HOST: geonode-db
      GEONODE_GEODATABASE_PASSWORD: docker
      GEONODE_GEODATABASE_USERNAME: docker
      GEONODE_INSTANCE_NAME: geonode
      GEOSERVER_ADMIN_PASSWORD: admingeoserver
      GEOSERVER_LOCATION: http://geoserver:8080/geoserver/
      GEOSERVER_LOCATION_SITE_LAYER: bims:location_site_view
      GEOSERVER_PUBLIC_LOCATION: http://staging.rbis.kartoza.com/geoserver/
      GOOGLE_ANALYTIC_KEY: UA-143784674-1
      HAYSTACK_HOST: elasticsearch
      INSTITUTION_ID_DEFAULT: RBIS
      IS_CELERY: 'False'
      IUCN_API_KEY: 03415f97a543d01b01d31d46430ee3a6c3a7f5e6f84ee89e7a7fbe5a5f4a6aa3
      MAP_TILER_KEY: GfepnJl8jdQrAm6UYO66
      MEDIA_ROOT: /home/web/media
      MONITORING_ENABLED: 'False'
      PROXY_ALLOWED_HOSTS: kartoza.com,staging.rbis.kartoza.com
      PYTHONPATH: /usr/src/rbis:/usr/src/geonode:/usr/src/bims:/home/web/django_project
      RABBITMQ_HOST: rabbitmq
      RAVEN_CONFIG_DSN: http://a3c812775ecd4178b21e35615f09134d:9dfcfed4497d4a07a75f2ed1cd73a00b@sentry.kartoza.com/4
      RECAPTCHA_KEY: 6Lc0X6kUAAAAAK7gMjMj2ltmKB-3B4nMZAo901zN
      ROOT_URLCONF: rbis_core.urls
      SASS_ENABLED: 'False'
      SENTRY_KEY: http://a3c812775ecd4178b21e35615f09134d:9dfcfed4497d4a07a75f2ed1cd73a00b@sentry.kartoza.com/4
      SITEURL: http://staging.rbis.kartoza.com/
      SITE_DOMAIN_NAME: http://staging.rbis.kartoza.com/
      SITE_READY: 'True'
      SPATIAL_SCALE_TITLE: SPATIAL
      STATIC_ROOT: /home/web/static
      UWSGI_CMD: uwsgi --ini /usr/src/rbis/uwsgi.conf
      VIRTUAL_HOST: staging.rbis.kartoza.com
      VIRTUAL_PORT: '8000'
      ASYNC_SIGNALS: 'True'
      BROKER_URL: amqp://rabbitmq:5672
    entrypoint:
    - /bin/sh
    volumes:
    - django-static:/home/web/static:rw
    - django-media:/home/web/media:rw
    - django-reports:/home/web/reports
    - django-logs:/var/log/
    - sync-data:/data
    - geoserver-data-dir:/usr/src/geonode/geoserver/data/data
    links:
    - db:db
    - geoserver:geoserver
    - rabbitmq:rabbitmq
    - worker:worker
    - uwsgi:uwsgi
    command: -c "/usr/local/bin/python manage.py runmessaging -i"
  smtp:
    image: catatnight/postfix
    environment:
      maildomain: kartoza.com
      smtp_user: noreply:docker
  clear-search-results:
    image: dimasciput/rbis_uwsgi:latest
    environment:
      ADMIN_EMAILS: dimas@kartoza.com
      ALLOWED_HOSTS: '["localhost","127.0.0.1",""]'
      APPLICATION_NAME: FBIS
      APP_NAME: rbis
      ASYNC_SIGNALS_GEONODE: 'True'
      AUTH_WITH_EMAIL_ONLY: 'True'
      COLLECTOR_FILTER: 'false'
      CONSERVATION_STATUS_FILTER: 'True'
      CONTACT_US_EMAIL: dimas@kartoza.com
      C_FORCE_ROOT: '1'
      DATABASE_HOST: db
      DATABASE_NAME: gis
      DATABASE_PASSWORD: docker
      DATABASE_USERNAME: docker
      DATE_TITLE: TEMPORAL SCALE
      DEFAULT_BACKEND_DATASTORE: datastore
      DJANGO_SETTINGS_MODULE: rbis_core.settings.prod_docker
      ECOLOGICAL_CONDITION_FILTER: 'True'
      ENABLE_MODULE_FILTER: 'True'
      GEOCONTEXT_COLLECTION_KEY: ledet
      GEOCONTEXT_URL: https://geocontext.kartoza.com/
      GEOIP_PATH: /home/web/media/geoip.db
      GEONODE_DATABASE: gis
      GEONODE_DATABASE_PASSWORD: docker
      GEONODE_DATABASE_USER: docker
      GEONODE_GEODATABASE: geonode_data
      GEONODE_GEODATABASE_HOST: geonode-db
      GEONODE_GEODATABASE_PASSWORD: docker
      GEONODE_GEODATABASE_USERNAME: docker
      GEONODE_INSTANCE_NAME: geonode
      GEOSERVER_LOCATION: http://geoserver:8080/geoserver/
      HAYSTACK_HOST: elasticsearch
      INSTITUTION_ID_DEFAULT: RBIS
      IS_CELERY: 'False'
      MEDIA_ROOT: /home/web/media
      MONITORING_ENABLED: 'False'
      PYTHONPATH: /usr/src/rbis:/usr/src/app:/usr/src/bims:/home/web/django_project
      RABBITMQ_HOST: rabbitmq
      REFERENCE_CATEGORY_FILTER: 'True'
      ROOT_URLCONF: rbis_core.urls
      SENTRY_KEY: https://9806d92a5ba64fe9b0bb5e8cb838fd12@sentry.io/1289403
      SPATIAL_SCALE_TITLE: SPATIAL SCALE
      STATIC_ROOT: /home/web/static
      UWSGI_CMD: uwsgi --ini /usr/src/rbis/uwsgi.conf
      VIRTUAL_PORT: '8000'
    entrypoint:
    - /bin/sh
    volumes:
    - django-static:/home/web/static:rw
    - django-media:/home/web/media:rw
    - django-reports:/home/web/reports
    - django-logs:/var/log/
    - sync-data:/data
    - geoserver-data-dir:/usr/src/geonode/geoserver/data/data
    links:
    - db:db
    - geoserver:geoserver
    - geonode-db:geonode-db
    command: -c "cd /usr/src/bims; python manage.py clear_search_results"
    labels:
      io.rancher.container.start_once: 'true'
      cron.schedule: 0 */5 * * *
  data-dir-conf:
    image: geosolutionsit/geoserver_data:2.12.x
    volumes:
    - geoserver-data-dir:/geoserver_data/data
    labels:
      io.rancher.container.start_once: 'true'
  dbrestore:
    image: kartoza/postgis:9.6-2.4
    environment:
      ALLOW_IP_RANGE: 10.42.0.0/16
      POSTGRES_DB: gis
      POSTGRES_PASS: docker
      POSTGRES_USER: docker
    volumes:
    - db-backups:/backups
    - postgis-data:/sql
    command: bash -c "su - postgres -c 'dropdb gis'; createdb -O docker -T template_postgis gis; pg_restore /backups/latest.dmp | psql gis"
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.start_once: 'true'
  mediabackup:
    image: kartoza/sftp-backup:1.0
    environment:
      DAILY: '3'
      DUMPPREFIX: MEDIA_bims
      MONTHLY: '2'
      TARGET_FOLDER: /media_backup
      USE_SFTP_BACKUP: 'False'
      YEARLY: '1'
    volumes:
    - django-media-backups:/backups
    - django-media:/media_backup
  geonode-db:
    image: kartoza/postgis:9.6-2.4
    environment:
      ALLOW_IP_RANGE: 10.42.0.0/16
      POSTGRES_DB: geonode_data
      POSTGRES_PASS: docker
      POSTGRES_USER: docker
    stdin_open: true
    volumes:
    - db-backups:/backups
    - postgis-data:/sql
    - sync-data:/raw
    tty: true
    labels:
      io.rancher.container.pull_image: always
  rabbitmq:
    image: rabbitmq:3.7-alpine
    environment:
      RABBITMQ_NODENAME: rabbit
      RABBIT_PASSWORD: rabbit_test_password
      USER: rabbit_user
    volumes:
    - rabbitmq:/var/lib/rabbitmq
  dbbackups:
    image: kartoza/pg-backup:9.6
    hostname: pg-backups
    environment:
      DUMPPREFIX: PG_bims
      PGDATABASE: gis
      PGHOST: db
      PGPASSWORD: docker
      PGPORT: '5432'
      PGUSER: docker
    volumes:
    - db-backups:/backups
  nginx-conf-data:
    image: dimasciput/rbis_nginx_conf:latest
    environment:
      TARGET: /etc/nginx/sites-available
      ALWASY_INIT: 'True'
    volumes:
    - nginx-conf-data-testing:/etc/nginx/sites-available
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.start_once: 'true'
  web:
    image: nginx
    environment:
      GEOSERVER_FORWARD: '''True'''
    stdin_open: true
    entrypoint:
    - /etc/nginx/sites-available/docker-entrypoint.sh
    volumes:
    - django-static:/home/web/static:ro
    - django-media:/home/web/media:ro
    - nginx-conf-data-testing:/etc/nginx/sites-available
    - nginx-logs:/var/log/nginx
    tty: true
    links:
    - uwsgi:django
    - geoserver:geoserver
    command: prod
    labels:
      io.rancher.container.pull_image: always
  btsync-media:
    image: kartoza/btsync:rancher
    hostname: btsync-media
    environment:
      DEVICE: BimsMedia
      SECRET: ''
      STANDBY_MODE: 'TRUE'
    volumes:
    - django-media:/web:rw
  uwsgi:
    image: dimasciput/rbis_uwsgi:latest
    environment:
      ADMIN_EMAILS: dimas@kartoza.com
      ALLOWED_HOSTS: '["localhost","127.0.0.1","staging.rbis.kartoza.com"]'
      APPLICATION_NAME: RBIS
      APP_NAME: rbis
      ASYNC_SIGNALS_GEONODE: 'True'
      AUTH_WITH_EMAIL_ONLY: 'True'
      BING_MAP_KEY: AkgNFJR-X5y5PQAuFebJ0Vme7QVH69AR4333gPTjX2tzhXBPGuyEsXDHox8Bazvy
      CONSERVATION_STATUS_FILTER: 'True'
      CONTACT_US_EMAIL: dimas@kartoza.com
      C_FORCE_ROOT: '1'
      DATABASE_HOST: db
      DATABASE_NAME: gis
      DATABASE_PASSWORD: docker
      DATABASE_USERNAME: docker
      DATE_TITLE: TEMPORAL
      DEFAULT_BACKEND_DATASTORE: datastore
      DJANGO_SETTINGS_MODULE: rbis_core.settings.dev_docker
      ECOLOGICAL_CONDITION_FILTER: 'True'
      ENABLE_MODULE_FILTER: 'True'
      ENABLE_UPLOAD_DATA: 'False'
      GEOCONTEXT_COLLECTION_KEY: ledet
      GEOCONTEXT_URL: https://geocontext.kartoza.com/
      GEOIP_PATH: /home/web/media/geoip.db
      GEONODE_DATABASE: gis
      GEONODE_DATABASE_PASSWORD: docker
      GEONODE_DATABASE_USER: docker
      GEONODE_GEODATABASE: geonode_data
      GEONODE_GEODATABASE_HOST: geonode-db
      GEONODE_GEODATABASE_PASSWORD: docker
      GEONODE_GEODATABASE_USERNAME: docker
      GEONODE_INSTANCE_NAME: geonode
      GEOSERVER_ADMIN_PASSWORD: admingeoserver
      GEOSERVER_LOCATION: http://geoserver:8080/geoserver/
      GEOSERVER_LOCATION_SITE_LAYER: bims:location_site_view
      GEOSERVER_PUBLIC_LOCATION: http://staging.rbis.kartoza.com/geoserver/
      GOOGLE_ANALYTIC_KEY: UA-143784674-1
      HAYSTACK_HOST: elasticsearch
      INSTITUTION_ID_DEFAULT: RBIS
      IS_CELERY: 'False'
      IUCN_API_KEY: 03415f97a543d01b01d31d46430ee3a6c3a7f5e6f84ee89e7a7fbe5a5f4a6aa3
      MAP_TILER_KEY: GfepnJl8jdQrAm6UYO66
      MEDIA_ROOT: /home/web/media
      MONITORING_ENABLED: 'False'
      PROXY_ALLOWED_HOSTS: kartoza.com,staging.rbis.kartoza.com
      PYTHONPATH: /usr/src/bims:/usr/src/rbis:/usr/src/geonode
      RABBITMQ_HOST: rabbitmq
      RAVEN_CONFIG_DSN: http://a3c812775ecd4178b21e35615f09134d:9dfcfed4497d4a07a75f2ed1cd73a00b@sentry.kartoza.com/4
      RECAPTCHA_KEY: 6Lc0X6kUAAAAAK7gMjMj2ltmKB-3B4nMZAo901zN
      ROOT_URLCONF: core.urls
      SASS_ENABLED: 'False'
      SENTRY_KEY: http://a3c812775ecd4178b21e35615f09134d:9dfcfed4497d4a07a75f2ed1cd73a00b@sentry.kartoza.com/4
      SITEURL: http://staging.rbis.kartoza.com/
      SITE_DOMAIN_NAME: http://staging.rbis.kartoza.com/
      SITE_READY: 'True'
      SPATIAL_SCALE_TITLE: SPATIAL
      STATIC_ROOT: /home/web/static
      UWSGI_CMD: uwsgi --ini /usr/src/rbis/uwsgi.conf
      VIRTUAL_HOST: staging.rbis.kartoza.com
      VIRTUAL_PORT: '8000'
      ASYNC_SIGNALS: 'True'
      BROKER_URL: amqp://rabbitmq:5672
      GEODATABASE_URL: postgis://geonode_data:docker@db:5432/geonode_data
      DATABASE_URL: postgis://docker:docker@db:5432/gis
      GEOFENCE_SECURITY_ENABLED: 'False'
      GEOSERVER_WEB_UI_LOCATION: http://staging.rbis.kartoza.com/geoserver/
      DEBUG: 'True'
    working_dir: /usr/src/rbis
    entrypoint:
    - /bin/sh
    volumes:
    - django-static:/home/web/static:rw
    - django-media:/home/web/media:rw
    - django-reports:/home/web/reports
    - django-logs:/var/log/
    - sync-data:/data
    - geoserver-data-dir:/usr/src/geonode/geoserver/data/data
    links:
    - db:db
    - geoserver:geoserver
    - geonode-db:geonode-db
    - rabbitmq:rabbitmq
    command: -c "uwsgi --ini /usr/src/rbis/uwsgi.conf"
  worker:
    image: dimasciput/rbis_uwsgi:latest
    environment:
      ADMIN_EMAILS: dimas@kartoza.com
      ALLOWED_HOSTS: '["localhost","127.0.0.1","staging.rbis.kartoza.com"]'
      APPLICATION_NAME: RBIS
      APP_NAME: RBIS
      BING_MAP_KEY: AkgNFJR-X5y5PQAuFebJ0Vme7QVH69AR4333gPTjX2tzhXBPGuyEsXDHox8Bazvy
      CONTACT_US_EMAIL: dimas@kartoza.com
      C_FORCE_ROOT: 'True'
      DATABASE_HOST: db
      DATABASE_NAME: gis
      DATABASE_PASSWORD: docker
      DATABASE_USERNAME: docker
      DEFAULT_BACKEND_DATASTORE: datastore
      DJANGO_SETTINGS_MODULE: core.settings.prod_worker
      GEOCONTEXT_URL: https://geocontext.kartoza.com/
      GEOIP_PATH: /home/web/media/geoip.db
      GEONODE_DATABASE: gis
      GEONODE_DATABASE_PASSWORD: docker
      GEONODE_DATABASE_USER: docker
      GEONODE_GEODATABASE: geonode_data
      GEONODE_GEODATABASE_HOST: db
      GEONODE_GEODATABASE_PASSWORD: docker
      GEONODE_GEODATABASE_USERNAME: docker
      GEONODE_INSTANCE_NAME: geonode
      GEOSERVER_ADMIN_PASSWORD: admingeoserver
      GEOSERVER_LOCATION: http://geoserver/geoserver/
      GEOSERVER_LOCATION_SITE_LAYER: bims:location_site_view
      GEOSERVER_PUBLIC_LOCATION: http://staging.rbis.kartoza.com/geoserver/
      IUCN_API_KEY: 03415f97a543d01b01d31d46430ee3a6c3a7f5e6f84ee89e7a7fbe5a5f4a6aa3
      MAP_TILER_KEY: GfepnJl8jdQrAm6UYO66
      MEDIA_ROOT: /home/web/media
      MONITORING_ENABLED: 'False'
      PROXY_ALLOWED_HOSTS: kartoza.com,staging.rbis.kartoza.com
      PYTHONPATH: /usr/src/bims:/usr/src/rbis:/usr/src/geonode
      RABBITMQ_HOST: rabbitmq
      RAVEN_CONFIG_DSN: http://a3c812775ecd4178b21e35615f09134d:9dfcfed4497d4a07a75f2ed1cd73a00b@sentry.kartoza.com/4
      ROOT_URLCONF: core.urls
      SASS_ENABLED: 'False'
      SENTRY_KEY: http://a3c812775ecd4178b21e35615f09134d:9dfcfed4497d4a07a75f2ed1cd73a00b@sentry.kartoza.com/4
      SITEURL: http://staging.rbis.kartoza.com/
      SITE_DOMAIN_NAME: http://staging.rbis.kartoza.com/
      STATIC_ROOT: /home/web/static
      VIRTUAL_HOST: staging.rbis.kartoza.com
      VIRTUAL_PORT: '8000'
      ASYNC_SIGNALS: 'True'
      BROKER_URL: amqp://rabbitmq:5672
      DEFAULT_BACKEND_UPLOADER: geonode.importer
      GEODATABASE_URL: postgis://geonode_data:docker@db:5432/geonode_data
      DATABASE_URL: postgis://docker:docker@db:5432/gis
    working_dir: /usr/src/rbis
    volumes:
    - django-static:/home/web/static:rw
    - django-media:/home/web/media:rw
    - django-reports:/home/web/reports
    - django-logs:/var/log/
    - sync-data:/data
    - geoserver-data-dir:/usr/src/geonode/geoserver/data/data
    links:
    - cache:cache
    - rabbitmq:rabbitmq
    - geoserver:geoserver
    - db:db
    - uwsgi:uwsgi
    command: -c "celery worker --app=bims.celery:app -B -l INFO"
  db:
    image: kartoza/postgis:9.6-2.4
    environment:
      ALLOW_IP_RANGE: 10.42.0.0/16
      POSTGRES_DB: gis
      POSTGRES_PASS: docker
      POSTGRES_USER: docker
    volumes:
    - db-backups:/backups
    - postgis-data:/sql
